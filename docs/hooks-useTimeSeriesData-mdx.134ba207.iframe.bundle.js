/*! For license information please see hooks-useTimeSeriesData-mdx.134ba207.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_iot_app_kit_doc_site=self.webpackChunk_iot_app_kit_doc_site||[]).push([[8853],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./stories/hooks/useTimeSeriesData.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("../node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../node_modules/react/jsx-runtime.js"),_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../node_modules/@storybook/blocks/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.ah)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{})})):_createMdxContent();function _createMdxContent(){const _components=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",a:"a",pre:"pre"},(0,_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.ah)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.h_,{title:"React hooks/useTimeSeriesData"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"usetimeseriesdata",children:"useTimeSeriesData"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useTimeSeriesData"})," react hook is a function which allows you to easily utilize time series data within your react components from IoT App Kit datasources."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"NOTE: This documentation assumes you are familiar with react and react-hooks. If you need to brush up, learn more at https://reactjs.org/docs/hooks-intro.html"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"basic-example-usage",children:"Basic example usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The simplest use of the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useTimeSeriesData"})," is to provide a query for time series data, which will return you the time series data streams\nfor the queried data."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Learn more about viewport groups at the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://github.com/awslabs/iot-app-kit/tree/main/docs/ViewportManager.md",target:"_blank",rel:"nofollow noopener noreferrer",children:"Viewport Manager documentation"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"    import { useTimeSeriesData } from '@iot-app-kit/react-components';\n    const { dataStreams } = useTimeSeriesData({ query });\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"A common use case of this hook is to construct an IoT App Kit visualizaiton, which may look simillar to the below example:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"//jsx\nconst CustomVisualization = () => {\n    const { dataStreams } = useTimeSeriesData({ query });\n    return <VisualizationComponent dataStreams={dataStreams} />\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"which will be used as shown below:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"imoprt { ViewportManager } from '@iot-app-kit/react-components';\nimoprt { initialize } from '@iot-app-kit/datasource-iotsitewise'; // Or any datasource that allows querying for time series data\nconst { IoTSiteWiseClient } = require('@aws-sdk/client-iotsitewise');\nconst iotsitewiseClient = new IoTSiteWiseClient({ region: \"REGION\" }); // And need to use a credential provider, learn more at https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/modules/_aws_sdk_credential_providers.html\n\nconst { query } = initialize({ iotsitewiseClient });\n\n// jsx\n<ViewportManager initialViewport={{ duration: '5m' }}>\n  <CustomVisualization\n    query={\n      query.timeSeriesData({\n        assets: [{\n          assetId: 'windmill',\n          properties: [{ propertyId: 'rpm' }]\n        }]\n      })\n    }\n  />\n\n  <CustomVisualization\n    query={\n      query.timeSeriesData({\n        assets: [{\n          assetId: 'windmill',\n          properties: [{ propertyId: 'wattage' }]\n        }]\n      })\n    }\n  />\n<ViewportManager />\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"This above example gives you two visualizations which will share a viewport group (so if )"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Additionally, the hook can be used without a ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<ViewportManager />"})," by explicitly passing in a viewport. This is useful for simple use cases where\nyou don't need to be able to synchronize a group of IoT App Kit components to display the same visualization. This is achieved as shown below:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"//jsx\nconst CustomVisualization = ({ query, viewport }) => {\n    const { dataStreams } = useTimeSeriesData({ query, viewport });\n    return <VisualizationComponent dataStreams={dataStreams} />\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"And the utilization of this custom component will look as shown below:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"// jsx\n<CustomVisualization\n  viewport={{ duration: '5m' }}}\n  query={\n    query.timeSeriesData({\n    assets: [{\n    assetId: 'windmill',\n    properties: [{ propertyId: 'wattage' }]\n    }]\n  })\n  }\n/>\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"This will give you a single visualization displaying the last 5 minutes of data real time the SiteWise data source."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["This same component can also be used without a viewport, as the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useTimeSeries"})," will still fallback to the viewport group if the ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"viewport"})," parameter passed into ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useTimeSeriesData"})," is undefined. This is a best practice of IoT App Kit component, to support both viewport groups and explicitly passed in viewports, and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useTimeSeriesData"})," gives you this behavior without any additional effort."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"kitchen-sink-example-utilization-with-all-features",children:"Kitchen sink example (utilization with all features)"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"// jsx\nconst MyVisualization = ({ query, viewport, styles }) => {\n  const { datastreams } = useTimeSeriesData({\n    // The timeseries data query from any data source of your choosing. Visualizations constructing with this hook will automatically work for any time series data source.\n    query,\n\n    // Optional explicit viewport when opting out of a viewport group, or not using a viewport group. Overrides any viewport group specified.\n    viewport,\n\n    // A specification of styles to associate to the returned data streams. useful for things such as specifying line colors to be associated with queried data.\n    styles,\n\n    // Configuration on what data is requested, and how its requested.\n    settings: {\n      // Higher buffer will lead to more off-viewport data to be requested. Useful for panning/zoom gestures\n      requestBuffer: 0.2, // 20% buffer\n\n      // refresh rate in milliseconds for how frequently to request data if applicable to the datasource\n      refreshRate: 1000,\n\n      // The 'resolution' which we want the data to be displayed at. For example, raw data, 1 minute aggregated, hourly aggregated, etc.\n      // Must be a resolution supported by your datasource. Full options contained in the data sources documentation you are utilizing.\n      // If left undefined, will automatically choose a supported resolution based on the duration of the viewport.\n      resolution: '1m',\n\n      // Specifies that all the data points within the viewport are to be fetched\n      fetchFromStartToEnd: true,\n\n      // Specifies that the most recent data point before the viewport is fetched. Useful for some visualizations, such as a line chart to draw the connecting line between the first data point present on the chart.\n      fetchMostRecentBeforeStart: true,\n\n      // Specifies that the most recent data point contained within the viewport. Useful for visualizations that only need a single data point, like a KPI, or Status.\n      fetchMostRecentBeforeEnd: true,\n    },\n  })\n\n  return <VisualizationWidget dataStreams={dataStreams}} />\n}\n"})})]})}}},"../node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("../node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"../node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("../node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);